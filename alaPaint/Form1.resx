<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="gumka.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHwAAACGCAIAAACQdXmWAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA81JREFUeF7tkgFy4zAMA/vpe9q96B7Sg01aVal02qYSCbnYwWRsKTahTV5eRTqS
        XoCkFyDpBUh6AZJegKQXIOkFSHoBkl6ApBcg6QVIegGSXoCkF0Aq/aXDl24Er/R/f/5aTL3h25vDeAzI
        bcZDTH3DH9iNzaSHmHrDH94Buq7QF8x+Maa+4a+j5D7SQ0y94a+mgasQBAV3U2LqDZ9Uyq+Q3sfUN3xw
        LkTSoSAISoipN7zHen679D6mvuG1FiDpH8bUG15xEizScbBwZqrMVS/pX8oNpZMbRyQ9O1bvVtLJjSOS
        np1W7z7SyY0jkp6dvt5NpJMbRyQ9O6GepGfkhtLJjSOSnp11xkGNdHLjiKRnZ6y3vXRy44ikZ+dhvb2l
        kxtHJD07HxkHfoAZSPq7PKw31zhIlS7jhqS/5YbSyY0jY8MVxoGkex7W21s6uXFkbLjIOJD0Iw/r7S2d
        3DgyNlxnHEh69t8cSHr23xwsl76dcUTS12ast9o4WPyTchtHJD07JcbBwhnkxhFJz06VcbBqDLlxRNKz
        U2gcSPrbildfz5JJ2xlHJH1txnqZxsH8YeTGEUnPTrlxMHkeuXFE0rPDYBzMHEluHJH07JAYB9OmkhtH
        JD07PMaBpBcwZzC5cSQ0LDQOfoX0sd720smNI6FhrXFwf+ljve2lkxtHQsNy4+Dm0sd620snN46EhgzG
        wZ2lj/VuIr0RjseQ0Aq33ruaaf/0Q/xFWyzMWAMr3ruaadL7HOIvwlZawmjcemkCnq/yRaGH+I6wuy5h
        Fm69NwHLpYcc4i/C1sSEl+PWS3OQLb3PIb4j7P4k4W249dIcVEoPOcRfhK1vZXwcK16agyfb/NDLpznE
        X4StTxMewa2XpoFUep9DfEfYDRm/gBUvTcMG0kMO8RdhCwmLuPXGTOwnvc8h/sJu+11b8cZMPNNpPBtD
        DvEn/Yo3JuM+0pFQTNIz0hejNQ6+3QyHMdrxeNK3wrU35uP5Zqd5px21MH0NXHtLSuaUO8077eTJ6Ufj
        2ptRMr/cad5pFhLSxuHCq7Cytt9p3ml2FqWNwIWPZyWv32neaaZmpb0TFz6PmJqKp3mniftJ2ntw4TOI
        qa94mneaxO/GnsWnv5Qbrpanead3+mns+/j0F3HD2/I07/R+x9gX8OlP0rPJX6Oj122xRXz6t+nZpmjj
        NO806cC3d2A/6T2mG/j9JuwtfVMkvQBJL0DSC5D0AiS9AEkvQNILkPQCJL0ASS9A0guQ9AIkvQBJL0DS
        C5D0AiS9AEkvQNILkPQCJL0ASS9A0tN5ff0PvrDKa1raFEMAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>